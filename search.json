[{"path":"https://gburitica.github.io/tsExtremes/articles/Cluster-functional-Analysis.html","id":"extremal-index","dir":"Articles","previous_headings":"","what":"Extremal index","title":"Section 2: Cluster inference","text":"extremal index motivated findings (Newell, 1964), (Leadbetter, 1983), (Leadbetter et al., 1983), discovered numerous real-valued stationary sequences \\((X_t)\\), \\[ Pr \\left( \\max_{t=1,\\dots,n} |X_t| \\le u_n \\right) \\; \\approx \\; \\Big[ Pr( X_1 \\le u_n) \\Big]^{n \\theta_X} \\; = \\; Pr \\left( \\max_{t=1,\\dots,n} |X^\\prime_t| \\le u_n \\right)^{\\theta_X}, \\quad n \\\\infty, \\] \\((X^\\prime_t)\\) time series iid variables distributed \\(X_1\\), \\(\\theta_{X} \\[0,1]\\), \\(u_n = u_n(\\tau)\\) sequence high thresholds \\(n \\, Pr(X_1 > u_n) \\\\tau\\), previous relation holds every \\(\\tau > 0\\). constant \\(\\theta_{X}\\) exists, say time series admits extremal index given \\(\\theta_X\\). expression , see extremal index measures shrinkage effect blocks maxima compared behaviour iid setting. reason shrinkage extremes records numerous time series tend cluster, high records likely followed period several extreme values. see time dependencies perturb behavior series, consider partition sample \\(m_n = \\lfloor n/b_n \\rfloor\\) disjoint blocks \\[ \\underbrace{X_1,\\dots,X_{b_n}}_{\\mathcal{B}_1},  \\underbrace{X_{b_n+1},\\dots,X_{2 b_n}}_{\\mathcal{B}_2}, \\dots, \\underbrace{X_{m_nb_n - b_n +1},\\dots,X_{m_n b_n}}_{\\mathcal{B}_{m_n}}, \\] Considering maxima block consists keeping largest records discarding rest observations. However, extremes cluster short periods, procedure discard several high recordings. many high records loose , measured extremal index. precisely, extremal index interpretation seen reciprocal number high recordings block.","code":""},{"path":"https://gburitica.github.io/tsExtremes/articles/Cluster-functional-Analysis.html","id":"inference-of-the-extremal-index","dir":"Articles","previous_headings":"Extremal index","what":"Inference of the extremal index","title":"Section 2: Cluster inference","text":"extremal index essential correct inference procedures extreme value statistics initially tailored iid observations. example, can used extrapolate high quantiles sample´s blocks maxima. following, see infer extremal index sample observations. purpose, let \\({\\bf X}_1,\\dots, {\\bf X}_n\\) observations values \\(\\mathbb{R}^d\\) stationary time series \\(({\\bf X}_t)_{t\\\\mathbb{Z}}\\). focus case heavy-tailed series admitting tail-index \\(\\alpha > 0\\). setting, (Buriticá et al., 2021) introduced extremal index cluster estimator given Spectral cluster estimator extremal index: \\[ \\widehat \\theta_{|{\\bf X}|} = \\frac{1}{k_n}   \\sum_{t=1}^{m_n} \\frac{\\|\\mathcal{B}_t\\|^{\\widehat\\alpha}_\\infty}{\\|\\mathcal{B}_t\\|^{\\widehat\\alpha}_{\\widehat\\alpha}}1(\\|\\mathcal{B}_t\\|_{\\widehat\\alpha}\\ge \\|\\mathcal{B}_t\\|_{\\widehat\\alpha,(k)}), \\] \\(\\|\\mathcal{B}_t\\|_{\\widehat\\alpha,(1)} \\ge \\|\\mathcal{B}_t\\|_{\\widehat\\alpha,(2)} \\ge \\cdots \\ge \\|\\mathcal{B}_t\\|_{\\widehat\\alpha,(m_n)}\\) order statistics \\(\\widehat\\alpha-\\)norms blocks, \\(\\widehat \\alpha\\) estimate tail index \\(\\alpha > 0\\). sequence \\((k_n)\\) tuning parameter spectral cluster estimator. must chose small proportion total amount blocks \\(m_n = \\lfloor n/b_n \\rfloor\\), \\(m_n/k_n \\\\infty\\). way, inference based solely extremal blocks.","code":""},{"path":"https://gburitica.github.io/tsExtremes/articles/Cluster-functional-Analysis.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Section 2: Cluster inference","text":"start loading \\(\\texttt{tsExtremes}\\) package. implement spectral cluster estimator, first start computing estimate tail-index series. stationary time series short-range dependence, Hill-type estimators still yield good results general. \\(\\texttt{tsExtremes}\\) package also allows sample classical time series models, estimate cluster lengths. following chunk simulates solution stochastic recurrence equation \\[ X_t = A_t X_{t-1} + B_t, \\quad t \\\\mathbb{Z}, \\] \\(\\log A_t \\sim N_t - 0.5\\), \\(B_t ~ Unif(0,1)\\), \\(N_t \\sim \\mathcal{N}(0,1)\\) \\((A_t), (B_t)\\) independent iid sequences. case \\(\\alpha = 1\\) \\(\\theta_X \\approx 0.2792\\). functions piCP computes estimates extremal index, well estimates cluster lengths, function k. Notice method also computes estimates asymptotic variance relying (Buriticá Wintenberger, 2022), use draw confidence intervals. red line corresponds true value.  Similarly, can produce plots option plot=T. dashed line blue gives estimate k = 10.  Finally, recall rainfall data set presented tail index analysis. can now apply method data set.","code":"library(tsExtremes) set.seed(123) path         <- ARCHm(8000) alphae       <- 1/alphaestimator(path,k1=1200)$xi  theta        <- 0.2792 estimate     <-  piCP(path,alphae)  ks           <-  estimate$k estimate     <-  piCP(path,alphae,plot=T) path         <- rainfall$BREST[rainfall$SEASON==\"SPRING\"] alphae       <- 1/alphaestimator(path,k1=150)$xi  estimate     <- piCP(path,alphae,plot=T)"},{"path":"https://gburitica.github.io/tsExtremes/articles/Example-Analysis.html","id":"main-goals-of-this-tutorial","dir":"Articles","previous_headings":"","what":"Main goals of this tutorial","title":"Section 1: Tail-index inference","text":"Review heavy-tailed random variables. Compute estimates tail index. tail-index \\(\\alpha > 0\\) heavy-tailed random variable \\(X\\) associated magnitude rare events, section review definition heavy-tailed variables. tail-index key statistic risk assessment applications measures magnitude extremes. Roughly speaking, \\(\\alpha\\) small, extremes highly significant, practical perspective, translates high-impact consequences. example, hydrology heavy precipitation amounts lead devastating losses. sum , \\(\\alpha\\) small, extremely high records likely happen \\(\\alpha\\) large.","code":""},{"path":"https://gburitica.github.io/tsExtremes/articles/Example-Analysis.html","id":"heavy-tailed-random-variables","dir":"Articles","previous_headings":"","what":"Heavy-tailed random variables","title":"Section 1: Tail-index inference","text":"setting, consider real-valued random variable \\(X\\) say heavy-tailed tail distribution polynomial decay. fomalize definition introduce concept regular variation. Definition. (Regular variation) say real valued random variable \\(X\\) distribution \\(F\\) regularly varying tail-index \\(\\alpha > 0\\) \\(\\lim_{t \\\\infty}\\bar F(tx)/\\bar F(t) = x^{-\\alpha},\\) \\(\\bar F(t) := 1- F(t)\\) tail distribution.  following call heavy-tailed variables regularly varying distributions. Examples heavy-tailed variables Pareto random variables, Fréchet, \\(t-\\)student, Burr log Gamma distribution. Examples light-tailed distributions include exponential, Weibull gaussian distribution. light-tailed examples, tail distributions decay exponential rate polynomial rate regularly varying distribution. practice means rare record high levels sampling , instead values concentrate around mean.","code":""},{"path":"https://gburitica.github.io/tsExtremes/articles/Example-Analysis.html","id":"moments-of-regularly-varying-distributions","dir":"Articles","previous_headings":"Heavy-tailed random variables","what":"Moments of regularly varying distributions","title":"Section 1: Tail-index inference","text":"case regularly varying random variables, variance mean can sometimes equal infinity. means sampling variable, obtain highly scattered observations reaching higher records comparison light-tailed distributions. see consider following samples, respective boxplot.  already mentioned, tail index heavy-tailed random variable plays important role determining heaviness tails. Moments’ property:  \\(X\\) non-negative regularly varying index \\(\\alpha > 0\\), \\(p > \\alpha\\), \\(E[X^p] = + \\infty\\), \\(p < \\alpha\\), \\(E[X^p] < + \\infty\\). particular moments’ property entails \\(\\alpha \\(0,2)\\), variance variable \\(X\\) infinite \\(\\alpha \\(0,1)\\) mean infinite. words, small values \\(\\alpha\\) indicate heavier tails larger values \\(\\alpha\\). reasons, estimating tail-index random variable \\(X\\) important quantify magnitude rare events. full overview regularly varying distributions refer (Bingham, Goldie, Teugels 1987).","code":"library(VGAM) library(ggplot2) n     <- 500 alpha <- 2 sample_exponential <- 1 + rexp(n) sample_pareto      <- VGAM::rpareto(n, shape=alpha)"},{"path":"https://gburitica.github.io/tsExtremes/articles/Example-Analysis.html","id":"inference-of-the-tail-index","dir":"Articles","previous_headings":"","what":"Inference of the tail-index","title":"Section 1: Tail-index inference","text":"subsection now turn problem esimating tail-index data. consider sample observations \\(X_1, \\dots, X_n\\) distribution \\(X\\), necessarily independent. Hill estimator. Hill estimator general procedure estimate tail-index \\(X\\), given \\[ \\frac{1}{\\widehat{\\alpha}^n} \\;  := \\;  \\frac{1}{\\widehat{\\alpha}^n(k^\\prime)}  := \\frac{1}{k^\\prime} \\, \\sum_{t=1}^{n} \\log(X_t/X_{(k^\\prime+1)})1(X_t > X_{(k^\\prime +1)}), \\] \\(X_{(1)} \\geq X_{(2)} \\geq \\dots \\geq  X_{(n)}\\) sorted sample records, \\(k^\\prime\\) tuning parameter Hill estimator.  temporal dependence strong, think example stationary AR(1) series: \\((X_t = \\rho X_{t-1} + Z_{t})\\), \\(|\\rho| < 1\\), \\((\\mathbb{Z})\\) series iid regularly varying innovations, Hill estimator yields consistent estimates tail-index \\(X\\). refer Chapter 4 (Beirlant et al. 2004) detailed treatment tail-index inference. motivate Hill estimator, note \\(X\\) follows Pareto distribution tail index \\(\\alpha\\), \\(F(t) = 1 -x^{-\\alpha}\\), straightforward calculations imply \\(E[\\log(X)] = 1/\\alpha\\). generality, renormalized largest records sample follow asymptotically Pareto distribution means Pickands-Balkdema de Haan Theorem also called ‘Peaks Thresholds’ Theorem. means, restrict sample \\(k^\\prime\\) largest records, see Hill estimator good candidate estimate tail-index. refer generality Chapter 4 (Beirlant et al. 2004).","code":""},{"path":"https://gburitica.github.io/tsExtremes/articles/Example-Analysis.html","id":"tsextremes-package-implementation","dir":"Articles","previous_headings":"","what":"tsExtremes package implementation","title":"Section 1: Tail-index inference","text":"implement Hill estimator tsExtremes package, start loading \\(\\texttt{tsExtremes}\\) package. \\(\\texttt{tsExtremes}\\) package includes rainfall dataset, containing daily rainfall records nine different weather stations France. data season record available. compute tail-index produce Hill Plot summer rainfall Brest use function .","code":"library(tsExtremes) h <- alphaestimator(rainfall$BREST[rainfall$SEASON==\"SPRING\"], plot=F , R0 = 100,  hill=T ,  k1 = 300 )"},{"path":[]},{"path":"https://gburitica.github.io/tsExtremes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gloria Buriticá. Author, maintainer.","code":""},{"path":"https://gburitica.github.io/tsExtremes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buriticá G (2024). tsExtremes: Time Series Analysis Extremes. R package version 0.0.0.1,  https://gburitica.github.io/tsExtremes/, https://github.com/GBuritica/tsExtremes.","code":"@Manual{,   title = {tsExtremes: Time Series Analysis of Extremes},   author = {Gloria Buriticá},   year = {2024},   note = {R package version 0.0.0.1,  https://gburitica.github.io/tsExtremes/},   url = {https://github.com/GBuritica/tsExtremes}, }"},{"path":"https://gburitica.github.io/tsExtremes/index.html","id":"tsextremes-package-tutorial","dir":"","previous_headings":"","what":"Time Series Analysis of Extremes","title":"Time Series Analysis of Extremes","text":"package tsExtremes includes functions studying extreme features heavy-tailed time series. can used compute estimates tail index, extremal index cluster lengths series. statistics series summarizing magnitude extreme records, number concomitant records.","code":""},{"path":"https://gburitica.github.io/tsExtremes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Time Series Analysis of Extremes","text":"get started, install package Github using command:","code":"devtools::install_github('GBuritica/tsExtremes')"},{"path":"https://gburitica.github.io/tsExtremes/index.html","id":"r-package-tutorial","dir":"","previous_headings":"","what":"R Package tutorial","title":"Time Series Analysis of Extremes","text":"package tutorial includes two main windows : vignette learn compute estimates tail index α series. implementation based Hill-type estimators (Haan, Mercadier, Zhou 2016). vignette learn implement block estimates cluster statistics; see (Buriticá, Mikosch, Wintenberger 2022). consider example extremal index based estimator proposed (Buriticá et al. 2021), also example cluster lengths (Buriticá Wintenberger 2024).","code":""},{"path":[]},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCH2m.html","id":null,"dir":"Reference","previous_headings":"","what":"ARCH2m — ARCH2m","title":"ARCH2m — ARCH2m","text":"Function sample model X= AX + B     X = (eta + lambda X) Z^2, Z iid Gaussian. default values, model index regular variation alpha = 1 extremal index theta = 0.727","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCH2m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARCH2m — ARCH2m","text":"","code":"ARCH2m(   n0,   eta = 2 * 10^{      -5  },   lambda = 0.5 )"},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCH2m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARCH2m — ARCH2m","text":"n0 (Integer trajectory length) eta (Real value) lambda (Real value)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCH2m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARCH2m — ARCH2m","text":"(Vector length n0 sampled SRE model)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCH2m.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARCH2m — ARCH2m","text":"","code":"path <- ARCH2m(1000) plot.ts(path)"},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCHm.html","id":null,"dir":"Reference","previous_headings":"","what":"ARCHm — ARCHm","title":"ARCHm — ARCHm","text":"Function sample model X  = AX + B     log ~ N-0.5, B ~ Unif(0,1) model index regular variation alpha = 1 extremal index theta = 0.2792","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCHm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARCHm — ARCHm","text":"","code":"ARCHm(n0)"},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCHm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARCHm — ARCHm","text":"n0 (Integer trajectory length)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCHm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARCHm — ARCHm","text":"(Vector length n0 sampled SRE model)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARCHm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARCHm — ARCHm","text":"","code":"path <- ARCHm(1000) plot.ts(path)"},{"path":"https://gburitica.github.io/tsExtremes/reference/ARm.html","id":null,"dir":"Reference","previous_headings":"","what":"AR model — ARm","title":"AR model — ARm","text":"Function sample model X = (par0)X + Z. default values, model index regular variation alpha identical Z extremal index 1-(par0)^alpha","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AR model — ARm","text":"","code":"ARm(n0, par0 = 0.7, Z.gen = function(n) rt(n, df = 1))"},{"path":"https://gburitica.github.io/tsExtremes/reference/ARm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AR model — ARm","text":"n0 (Integer trajectory length) par0 (Value (0,1)) Z.gen (Function trajectory length n sample noise)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AR model — ARm","text":"(Vector length n0 sampled SRE model)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/ARm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AR model — ARm","text":"","code":"path  <- ARm(1000,0.7) plot.ts(path)"},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator.html","id":null,"dir":"Reference","previous_headings":"","what":"alphaestimator — alphaestimator","title":"alphaestimator — alphaestimator","text":"function computes (tail)-index function k returns unbiased Hill estimator de Haan et al. tuning parameter rho = 2","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alphaestimator — alphaestimator","text":"","code":"alphaestimator(   sample,   k1 = floor(n^(0.7)),   plot = FALSE,   R0 = 100,   hill = FALSE,   ylim0 = NULL )"},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"alphaestimator — alphaestimator","text":"sample (Vector nonnegative univariate entries) k1 (Integer indicating number high order statistics consider inference) plot (T F indicate plot Hill estimates function k must shown) R0 (Integer number bootstrap replicates consider computing confidence intervals) hill (T F indicate classical Hill-plot also plotted) ylim0 (Vector lower upper bounds y-axis plot )","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"alphaestimator — alphaestimator","text":"data.frame xi estimate confidence intervals lower upper bounds.","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"alphaestimator — alphaestimator","text":"","code":"sample   <- abs( arima.sim(n = 8000, list(ar=0.5, ma=0), rand.gen=function(n) rt(n,df=4) ) ) h <- alphaestimator(sample, plot=TRUE , R0 = 100,  hill=TRUE,   k1 = 1000 )  h <- alphaestimator(sample, plot=TRUE , R0 = 100,  hill=FALSE,  k1 = 1000 ) abline(h=0.25,col = \"red\")"},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator2.html","id":null,"dir":"Reference","previous_headings":"","what":"alphaestimator2 — alphaestimator2","title":"alphaestimator2 — alphaestimator2","text":"function computes (tail)-index. returns mean estimate Pickands, Hill DeHaan estimators 96th empirical quantile. uses fExtreme code.","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alphaestimator2 — alphaestimator2","text":"","code":"alphaestimator2(path0)"},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"alphaestimator2 — alphaestimator2","text":"path0 (Vector univariate observations)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"alphaestimator2 — alphaestimator2","text":"integer tail - index estimate","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/alphaestimator2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"alphaestimator2 — alphaestimator2","text":"","code":"sample   <- abs( arima.sim(n = 8000, list(ar=0.5, ma=0), rand.gen=function(n) rt(n,df=4) ) ) h  <- alphaestimator2(sample)"},{"path":"https://gburitica.github.io/tsExtremes/reference/eiCP.html","id":null,"dir":"Reference","previous_headings":"","what":"eiCP — eiCP","title":"eiCP — eiCP","text":"Estimates extremal index based alpha cluster Process","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/eiCP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eiCP — eiCP","text":"","code":"eiCP(path0, alpha0, klim0 = 100, n0 = length(path0), plot = F)"},{"path":"https://gburitica.github.io/tsExtremes/reference/eiCP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eiCP — eiCP","text":"path0 (Matrix sample trajectory time series) alpha0 (Integer estimate tail index) klim0 (Integer largest order statistic k consider, vector values k consider) n0 (Integer path length) plot (F T plot estimates function k must shown)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/eiCP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"eiCP — eiCP","text":"data frame estimates extremal index values k block lengths b used inference estimate asymptotic variance also provided using cluster process inference.","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/eiCP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"eiCP — eiCP","text":"","code":"path  <- ARCHm(20000) alpha <- 1/alphaestimator(path,k1=1200)$xi ## The real value should be one ei    <- eiCP(path,alpha,plot=T)  pi    <- piCP(path,alpha,plot=T)"},{"path":"https://gburitica.github.io/tsExtremes/reference/functionalCP.html","id":null,"dir":"Reference","previous_headings":"","what":"functionalCP — functionalCP","title":"functionalCP — functionalCP","text":"Estimates cluster statistics based alpha cluster Process","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/functionalCP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"functionalCP — functionalCP","text":"","code":"functionalCP(   path0,   alpha0,   klim0 = 100,   n0 = length(path0),   p0 = \"alpha\",   cluster_func = function(block) max(abs(block)^alpha0),   plot = F )"},{"path":"https://gburitica.github.io/tsExtremes/reference/functionalCP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"functionalCP — functionalCP","text":"path0 (Matrix sample trajectory time series) alpha0 (Integer estimate tail index) klim0 (Integer largest order statistic k consider, vector values k consider) n0 (Integer path length) cluster_func (function evaluate extremal blocks. default provide functional computing extremal index) plot (F T plot estimates function k must shown)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/functionalCP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"functionalCP — functionalCP","text":"data frame estimates cluster functional estimates values k block lengths b used inference estimate asymptotic variance also provided using cluster process inference.","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/functionalCP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"functionalCP — functionalCP","text":"","code":"path  <- ARCHm(20000) alpha <- 1/alphaestimator(path,k1=1200)$xi ## The real value should be one ei    <- functionalCP(path,1,plot=T)       ## two options are available for computing the extremal index #> Error in cluster_func(path0[((l - 1) * b0 + 1):(l * b0)]/suma_p[l], p0,     alpha0): unused arguments (p0, alpha0) ei2   <- eiCP(path,1,plot=T)"},{"path":"https://gburitica.github.io/tsExtremes/reference/hillestimator.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute (tail)-index — hillestimator","title":"Compute (tail)-index — hillestimator","text":"function computes Hill (tail)-index estimate stationary time series.","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/hillestimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute (tail)-index — hillestimator","text":"","code":"hillestimator(path, k0 = NULL, plot = F)"},{"path":"https://gburitica.github.io/tsExtremes/reference/hillestimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute (tail)-index — hillestimator","text":"path (vector univariate observations) k0 (vector order statistics compute Hill estimates). uses k0 = n*0.05 otherwise plot (T F plot shown).","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/hillestimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute (tail)-index — hillestimator","text":"data.frame hill estimates function k.","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/hillestimator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute (tail)-index — hillestimator","text":"","code":"hillestimator(rainfall$LANVEOC[rainfall$SEASON=='SPRING'], 1:200) #>       k Hill.estimate #> 1     1     0.0000000 #> 2     2     0.3062167 #> 3     3     0.3842201 #> 4     4     0.2821974 #> 5     5     0.2145849 #> 6     6     0.2015209 #> 7     7     0.1740131 #> 8     8     0.2185826 #> 9     9     0.3017168 #> 10   10     0.3518917 #> 11   11     0.3246707 #> 12   12     0.2951552 #> 13   13     0.2785911 #> 14   14     0.2571610 #> 15   15     0.2468896 #> 16   16     0.2468241 #> 17   17     0.2396964 #> 18   18     0.2255966 #> 19   19     0.2172388 #> 20   20     0.2099981 #> 21   21     0.2079370 #> 22   22     0.1980353 #> 23   23     0.2235199 #> 24   24     0.2226122 #> 25   25     0.2357090 #> 26   26     0.2399483 #> 27   27     0.2307195 #> 28   28     0.2406934 #> 29   29     0.2320972 #> 30   30     0.2240938 #> 31   31     0.2213079 #> 32   32     0.2188748 #> 33   33     0.2215137 #> 34   34     0.2243706 #> 35   35     0.2177715 #> 36   36     0.2309676 #> 37   37     0.2245518 #> 38   38     0.2382854 #> 39   39     0.2320148 #> 40   40     0.2260657 #> 41   41     0.2204140 #> 42   42     0.2250884 #> 43   43     0.2197292 #> 44   44     0.2350281 #> 45   45     0.2296865 #> 46   46     0.2349452 #> 47   47     0.2298377 #> 48   48     0.2406959 #> 49   49     0.2516817 #> 50   50     0.2573563 #> 51   51     0.2522091 #> 52   52     0.2581929 #> 53   53     0.2754508 #> 54   54     0.2702536 #> 55   55     0.2708827 #> 56   56     0.2716233 #> 57   57     0.2667729 #> 58   58     0.2620927 #> 59   59     0.2632719 #> 60   60     0.2645403 #> 61   61     0.2601313 #> 62   62     0.2558669 #> 63   63     0.2517400 #> 64   64     0.2593049 #> 65   65     0.2610842 #> 66   66     0.2570675 #> 67   67     0.2590377 #> 68   68     0.2551715 #> 69   69     0.2514189 #> 70   70     0.2477752 #> 71   71     0.2501353 #> 72   72     0.2525470 #> 73   73     0.2490394 #> 74   74     0.2456279 #> 75   75     0.2423086 #> 76   76     0.2450480 #> 77   77     0.2478297 #> 78   78     0.2446111 #> 79   79     0.2535964 #> 80   80     0.2626564 #> 81   81     0.2593732 #> 82   82     0.2623631 #> 83   83     0.2653941 #> 84   84     0.2621965 #> 85   85     0.2716539 #> 86   86     0.2684580 #> 87   87     0.2653364 #> 88   88     0.2750256 #> 89   89     0.2719003 #> 90   90     0.2752761 #> 91   91     0.2786900 #> 92   92     0.2756275 #> 93   93     0.2726315 #> 94   94     0.2762147 #> 95   95     0.2732762 #> 96   96     0.2769570 #> 97   97     0.2740721 #> 98   98     0.2844918 #> 99   99     0.2815888 #> 100 100     0.2989472 #> 101 101     0.3027837 #> 102 102     0.2997859 #> 103 103     0.2968468 #> 104 104     0.2939648 #> 105 105     0.3049315 #> 106 106     0.3020274 #> 107 107     0.2991781 #> 108 108     0.2963820 #> 109 109     0.3076240 #> 110 110     0.3048017 #> 111 111     0.3162155 #> 112 112     0.3133667 #> 113 113     0.3105688 #> 114 114     0.3149888 #> 115 115     0.3122258 #> 116 116     0.3167310 #> 117 117     0.3212733 #> 118 118     0.3258535 #> 119 119     0.3230920 #> 120 120     0.3203769 #> 121 121     0.3177071 #> 122 122     0.3150814 #> 123 123     0.3124988 #> 124 124     0.3099582 #> 125 125     0.3148386 #> 126 126     0.3197549 #> 127 127     0.3172171 #> 128 128     0.3147194 #> 129 129     0.3197513 #> 130 130     0.3172726 #> 131 131     0.3148321 #> 132 132     0.3199760 #> 133 133     0.3175519 #> 134 134     0.3151643 #> 135 135     0.3128123 #> 136 136     0.3180998 #> 137 137     0.3234237 #> 138 138     0.3210629 #> 139 139     0.3187364 #> 140 140     0.3164433 #> 141 141     0.3141830 #> 142 142     0.3119548 #> 143 143     0.3097579 #> 144 144     0.3153138 #> 145 145     0.3131241 #> 146 146     0.3109647 #> 147 147     0.3088348 #> 148 148     0.3067338 #> 149 149     0.3124435 #> 150 150     0.3103465 #> 151 151     0.3082775 #> 152 152     0.3140791 #> 153 153     0.3120128 #> 154 154     0.3099735 #> 155 155     0.3079607 #> 156 156     0.3059739 #> 157 157     0.3119177 #> 158 158     0.3099310 #> 159 159     0.3159375 #> 160 160     0.3219827 #> 161 161     0.3199703 #> 162 162     0.3179829 #> 163 163     0.3160200 #> 164 164     0.3140813 #> 165 165     0.3202633 #> 166 166     0.3183224 #> 167 167     0.3245681 #> 168 168     0.3226245 #> 169 169     0.3207042 #> 170 170     0.3188065 #> 171 171     0.3251617 #> 172 172     0.3232601 #> 173 173     0.3296795 #> 174 174     0.3277739 #> 175 175     0.3258901 #> 176 176     0.3240279 #> 177 177     0.3221868 #> 178 178     0.3287348 #> 179 179     0.3268880 #> 180 180     0.3250618 #> 181 181     0.3316947 #> 182 182     0.3298622 #> 183 183     0.3451442 #> 184 184     0.3432581 #> 185 185     0.3500507 #> 186 186     0.3568922 #> 187 187     0.3549734 #> 188 188     0.3530752 #> 189 189     0.3511971 #> 190 190     0.3581495 #> 191 191     0.3562645 #> 192 192     0.3543993 #> 193 193     0.3525535 #> 194 194     0.3507268 #> 195 195     0.3489189 #> 196 196     0.3471296 #> 197 197     0.3542474 #> 198 198     0.3524492 #> 199 199     0.3506692 #> 200 200     0.3489070 hillestimator(rainfall$LANVEOC[rainfall$SEASON=='SPRING'], plot=T)  #>       k Hill.estimate #> 1     1     0.0000000 #> 2     2     0.3062167 #> 3     3     0.3842201 #> 4     4     0.2821974 #> 5     5     0.2145849 #> 6     6     0.2015209 #> 7     7     0.1740131 #> 8     8     0.2185826 #> 9     9     0.3017168 #> 10   10     0.3518917 #> 11   11     0.3246707 #> 12   12     0.2951552 #> 13   13     0.2785911 #> 14   14     0.2571610 #> 15   15     0.2468896 #> 16   16     0.2468241 #> 17   17     0.2396964 #> 18   18     0.2255966 #> 19   19     0.2172388 #> 20   20     0.2099981 #> 21   21     0.2079370 #> 22   22     0.1980353 #> 23   23     0.2235199 #> 24   24     0.2226122 #> 25   25     0.2357090 #> 26   26     0.2399483 #> 27   27     0.2307195 #> 28   28     0.2406934 #> 29   29     0.2320972 #> 30   30     0.2240938 #> 31   31     0.2213079 #> 32   32     0.2188748 #> 33   33     0.2215137 #> 34   34     0.2243706 #> 35   35     0.2177715 #> 36   36     0.2309676 #> 37   37     0.2245518 #> 38   38     0.2382854 #> 39   39     0.2320148 #> 40   40     0.2260657 #> 41   41     0.2204140 #> 42   42     0.2250884 #> 43   43     0.2197292 #> 44   44     0.2350281 #> 45   45     0.2296865 #> 46   46     0.2349452 #> 47   47     0.2298377 #> 48   48     0.2406959 #> 49   49     0.2516817 #> 50   50     0.2573563 #> 51   51     0.2522091 #> 52   52     0.2581929 #> 53   53     0.2754508 #> 54   54     0.2702536 #> 55   55     0.2708827 #> 56   56     0.2716233 #> 57   57     0.2667729 #> 58   58     0.2620927 #> 59   59     0.2632719 #> 60   60     0.2645403 #> 61   61     0.2601313 #> 62   62     0.2558669 #> 63   63     0.2517400 #> 64   64     0.2593049 #> 65   65     0.2610842 #> 66   66     0.2570675 #> 67   67     0.2590377 #> 68   68     0.2551715 #> 69   69     0.2514189 #> 70   70     0.2477752 #> 71   71     0.2501353 #> 72   72     0.2525470 #> 73   73     0.2490394 #> 74   74     0.2456279 #> 75   75     0.2423086 #> 76   76     0.2450480 #> 77   77     0.2478297 #> 78   78     0.2446111 #> 79   79     0.2535964 #> 80   80     0.2626564 #> 81   81     0.2593732 #> 82   82     0.2623631 #> 83   83     0.2653941 #> 84   84     0.2621965 #> 85   85     0.2716539 #> 86   86     0.2684580 #> 87   87     0.2653364 #> 88   88     0.2750256 #> 89   89     0.2719003 #> 90   90     0.2752761 #> 91   91     0.2786900 #> 92   92     0.2756275 #> 93   93     0.2726315 #> 94   94     0.2762147 #> 95   95     0.2732762 #> 96   96     0.2769570 #> 97   97     0.2740721 #> 98   98     0.2844918 #> 99   99     0.2815888 #> 100 100     0.2989472 #> 101 101     0.3027837 #> 102 102     0.2997859 #> 103 103     0.2968468 #> 104 104     0.2939648 #> 105 105     0.3049315 #> 106 106     0.3020274 #> 107 107     0.2991781 #> 108 108     0.2963820 #> 109 109     0.3076240 #> 110 110     0.3048017 #> 111 111     0.3162155 #> 112 112     0.3133667 #> 113 113     0.3105688 #> 114 114     0.3149888 #> 115 115     0.3122258 #> 116 116     0.3167310 #> 117 117     0.3212733 #> 118 118     0.3258535 #> 119 119     0.3230920 #> 120 120     0.3203769 #> 121 121     0.3177071 #> 122 122     0.3150814 #> 123 123     0.3124988 #> 124 124     0.3099582 #> 125 125     0.3148386 #> 126 126     0.3197549 #> 127 127     0.3172171 #> 128 128     0.3147194 #> 129 129     0.3197513 #> 130 130     0.3172726 #> 131 131     0.3148321 #> 132 132     0.3199760 #> 133 133     0.3175519 #> 134 134     0.3151643 #> 135 135     0.3128123 #> 136 136     0.3180998 #> 137 137     0.3234237 #> 138 138     0.3210629 #> 139 139     0.3187364 #> 140 140     0.3164433 #> 141 141     0.3141830 #> 142 142     0.3119548 #> 143 143     0.3097579 #> 144 144     0.3153138 #> 145 145     0.3131241 #> 146 146     0.3109647 #> 147 147     0.3088348 #> 148 148     0.3067338 #> 149 149     0.3124435 #> 150 150     0.3103465 #> 151 151     0.3082775 #> 152 152     0.3140791 #> 153 153     0.3120128 #> 154 154     0.3099735 #> 155 155     0.3079607 #> 156 156     0.3059739 #> 157 157     0.3119177 #> 158 158     0.3099310 #> 159 159     0.3159375 #> 160 160     0.3219827 #> 161 161     0.3199703 #> 162 162     0.3179829 #> 163 163     0.3160200 #> 164 164     0.3140813 #> 165 165     0.3202633 #> 166 166     0.3183224 #> 167 167     0.3245681 #> 168 168     0.3226245 #> 169 169     0.3207042 #> 170 170     0.3188065 #> 171 171     0.3251617 #> 172 172     0.3232601 #> 173 173     0.3296795 #> 174 174     0.3277739 #> 175 175     0.3258901 #> 176 176     0.3240279 #> 177 177     0.3221868 #> 178 178     0.3287348 #> 179 179     0.3268880 #> 180 180     0.3250618 #> 181 181     0.3316947 #> 182 182     0.3298622 #> 183 183     0.3451442 #> 184 184     0.3432581"},{"path":"https://gburitica.github.io/tsExtremes/reference/piCP.html","id":null,"dir":"Reference","previous_headings":"","what":"piCP — piCP","title":"piCP — piCP","text":"Estimates cluster legths extrema index based alpha cluster Process","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/piCP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"piCP — piCP","text":"","code":"piCP(path0, alpha0, klim0 = 100, n0 = length(path0), plot = F)"},{"path":"https://gburitica.github.io/tsExtremes/reference/piCP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"piCP — piCP","text":"path0 (Matrix sample trajectory time series) alpha0 (Integer estimate tail index) klim0 (Integer largest order statistic k consider, vector values k consider) n0 (Integer path length) plot (F T plot estimates function k must shown)","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/piCP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"piCP — piCP","text":"data frame estimates cluster lengths pi_j values k block lengths b used inference estimate asymptotic variance also provided using cluster process inference.","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/piCP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"piCP — piCP","text":"","code":"path  <- ARCHm(20000) alpha <- 1/alphaestimator(path,k1=1200)$xi ## The real value should be one pi    <- piCP(path,alpha,plot=T)"},{"path":"https://gburitica.github.io/tsExtremes/reference/rainfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily rainfall data set from a network of weather stations in France — rainfall","title":"Daily rainfall data set from a network of weather stations in France — rainfall","text":"data set precipitation amounts mm nine weather stations.","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/rainfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily rainfall data set from a network of weather stations in France — rainfall","text":"","code":"rainfall"},{"path":"https://gburitica.github.io/tsExtremes/reference/rainfall.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily rainfall data set from a network of weather stations in France — rainfall","text":"data frame 10 columns. y.date Date BREST Precipitation amounts Brest (oceanic weather) LANVEOC Precipitation amounts Lanveoc (oceanic weather) QUIMPER Precipitation amounts Quimper (oceanic weather) BORMES Precipitation amounts Bormes (mediterranean weather) LE.LUC Precipitation amounts Le Luc (mediterranean weather) HYERES Precipitation amounts Hyeres (mediterranean weather) NANCY Precipitation amounts Nancy (continental weather) METZ Precipitation amounts Metz (continental weather) ROVILLE Precipitation amounts Roville (continental weather) SEASON Season","code":""},{"path":"https://gburitica.github.io/tsExtremes/reference/rainfall.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily rainfall data set from a network of weather stations in France — rainfall","text":"Méteo France.","code":""}]
