[{"path":"/articles/Example-Analysis.html","id":"hill-estimation","dir":"Articles","previous_headings":"","what":"Hill estimation","title":"Example - Tail index","text":"get started tsExtremes package, included data set Precipitations. rainfall variable contains daily rainfall records nine different weather stations France. data season record available. compute (tail) index Hill Plot summer rainfall Brest use function .","code":"h <- hillestimator(rainfall$BREST[rainfall$SEASON==\"SPRING\"], plot=T) h <- alphaestimator(rainfall$BREST[rainfall$SEASON==\"SPRING\"], plot=TRUE , R0 = 100,  hill=T ,  k1 = 300 )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gloria Buriticá. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buriticá G (2023). tsExtremes: Time Series Analysis Extremes. R package version 0.0.0.1, https://github.com/GBuritica/tsExtremes.","code":"@Manual{,   title = {tsExtremes: Time Series Analysis of Extremes},   author = {Gloria Buriticá},   year = {2023},   note = {R package version 0.0.0.1},   url = {https://github.com/GBuritica/tsExtremes}, }"},{"path":"/index.html","id":"tsextremes","dir":"","previous_headings":"","what":"Time Series Analysis of Extremes ","title":"Time Series Analysis of Extremes ","text":"package tsExtremes aims compile functions assessing time dependencies extremes.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Time Series Analysis of Extremes ","text":"can install package github using","code":"devtools::install_github('GBuritica/tsExtremes')"},{"path":"/reference/alphaestimator.html","id":null,"dir":"Reference","previous_headings":"","what":"alphaestimator — alphaestimator","title":"alphaestimator — alphaestimator","text":"function computes (tail)-index function k returns unbiased Hill estimator de Haan et al. tuning parameter rho = 2","code":""},{"path":"/reference/alphaestimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alphaestimator — alphaestimator","text":"","code":"alphaestimator(   sample,   k1 = floor(n^(0.7)),   plot = FALSE,   R0 = 100,   hill = FALSE,   ylim0 = NULL )"},{"path":"/reference/alphaestimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"alphaestimator — alphaestimator","text":"sample (Vector nonnegative univariate entries) k1 (Integer indicating number high order statistics consider inference) plot (T F indicate plot Hill estimates function k must shown) R0 (Integer number bootstrap replicates consider computing confidence intervals) hill (T F indicate classical Hill-plot also plotted) ylim0 (Vector lower upper bounds y-axis plot )","code":""},{"path":"/reference/alphaestimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"alphaestimator — alphaestimator","text":"data.frame xi estimate confidence intervals lower upper bounds.","code":""},{"path":"/reference/alphaestimator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"alphaestimator — alphaestimator","text":"","code":"sample   <- abs( arima.sim(n = 8000, list(ar=0.5, ma=0), rand.gen=function(n) rt(n,df=4) ) ) alphaestimator(sample, plot=TRUE , R0 = 100,  hill=TRUE,   k1 = 1000 )  #>      lbound        xi    ubound #> 1 0.2465496 0.2711128 0.2977865 alphaestimator(sample, plot=TRUE , R0 = 100,  hill=FALSE,  k1 = 1000 ) #>      lbound        xi    ubound #> 1 0.2464936 0.2711128 0.2959721 abline(h=0.25,col = \"red\")"},{"path":"/reference/alphaestimator2.html","id":null,"dir":"Reference","previous_headings":"","what":"alphaestimator2 — alphaestimator2","title":"alphaestimator2 — alphaestimator2","text":"function computes (tail)-index. returns mean estimate Pickands, Hill DeHaan estimators 96th empirical quantile. uses fExtreme code.","code":""},{"path":"/reference/alphaestimator2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alphaestimator2 — alphaestimator2","text":"","code":"alphaestimator2(path0)"},{"path":"/reference/alphaestimator2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"alphaestimator2 — alphaestimator2","text":"path0 (Vector univariate observations)","code":""},{"path":"/reference/alphaestimator2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"alphaestimator2 — alphaestimator2","text":"integer tail - index estimate","code":""},{"path":"/reference/alphaestimator2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"alphaestimator2 — alphaestimator2","text":"","code":"sample   <- abs( arima.sim(n = 8000, list(ar=0.5, ma=0), rand.gen=function(n) rt(n,df=4) ) ) alphaestimator2(sample) #> [1] 4.213824"},{"path":"/reference/hillestimator.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute (tail)-index — hillestimator","title":"Compute (tail)-index — hillestimator","text":"function computes Hill (tail)-index estimate stationary time series.","code":""},{"path":"/reference/hillestimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute (tail)-index — hillestimator","text":"","code":"hillestimator(path, k0 = NULL, plot = F)"},{"path":"/reference/hillestimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute (tail)-index — hillestimator","text":"path (vector univariate observations) k0 (vector order statistics compute Hill estimates). uses k0 = n*0.05 otherwise plot (T F plot shown).","code":""},{"path":"/reference/hillestimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute (tail)-index — hillestimator","text":"data.frame hill estimates function k.","code":""},{"path":"/reference/hillestimator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute (tail)-index — hillestimator","text":"","code":"hillestimator(rainfall$LANVEOC[rainfall$SEASON=='SPRING'], 1:200) #>       k Hill.estimate #> 1     1     0.0000000 #> 2     2     0.3062167 #> 3     3     0.3842201 #> 4     4     0.2821974 #> 5     5     0.2145849 #> 6     6     0.2015209 #> 7     7     0.1740131 #> 8     8     0.2185826 #> 9     9     0.3017168 #> 10   10     0.3518917 #> 11   11     0.3246707 #> 12   12     0.2951552 #> 13   13     0.2785911 #> 14   14     0.2571610 #> 15   15     0.2468896 #> 16   16     0.2468241 #> 17   17     0.2396964 #> 18   18     0.2255966 #> 19   19     0.2172388 #> 20   20     0.2099981 #> 21   21     0.2079370 #> 22   22     0.1980353 #> 23   23     0.2235199 #> 24   24     0.2226122 #> 25   25     0.2357090 #> 26   26     0.2399483 #> 27   27     0.2307195 #> 28   28     0.2406934 #> 29   29     0.2320972 #> 30   30     0.2240938 #> 31   31     0.2213079 #> 32   32     0.2188748 #> 33   33     0.2215137 #> 34   34     0.2243706 #> 35   35     0.2177715 #> 36   36     0.2309676 #> 37   37     0.2245518 #> 38   38     0.2382854 #> 39   39     0.2320148 #> 40   40     0.2260657 #> 41   41     0.2204140 #> 42   42     0.2250884 #> 43   43     0.2197292 #> 44   44     0.2350281 #> 45   45     0.2296865 #> 46   46     0.2349452 #> 47   47     0.2298377 #> 48   48     0.2406959 #> 49   49     0.2516817 #> 50   50     0.2573563 #> 51   51     0.2522091 #> 52   52     0.2581929 #> 53   53     0.2754508 #> 54   54     0.2702536 #> 55   55     0.2708827 #> 56   56     0.2716233 #> 57   57     0.2667729 #> 58   58     0.2620927 #> 59   59     0.2632719 #> 60   60     0.2645403 #> 61   61     0.2601313 #> 62   62     0.2558669 #> 63   63     0.2517400 #> 64   64     0.2593049 #> 65   65     0.2610842 #> 66   66     0.2570675 #> 67   67     0.2590377 #> 68   68     0.2551715 #> 69   69     0.2514189 #> 70   70     0.2477752 #> 71   71     0.2501353 #> 72   72     0.2525470 #> 73   73     0.2490394 #> 74   74     0.2456279 #> 75   75     0.2423086 #> 76   76     0.2450480 #> 77   77     0.2478297 #> 78   78     0.2446111 #> 79   79     0.2535964 #> 80   80     0.2626564 #> 81   81     0.2593732 #> 82   82     0.2623631 #> 83   83     0.2653941 #> 84   84     0.2621965 #> 85   85     0.2716539 #> 86   86     0.2684580 #> 87   87     0.2653364 #> 88   88     0.2750256 #> 89   89     0.2719003 #> 90   90     0.2752761 #> 91   91     0.2786900 #> 92   92     0.2756275 #> 93   93     0.2726315 #> 94   94     0.2762147 #> 95   95     0.2732762 #> 96   96     0.2769570 #> 97   97     0.2740721 #> 98   98     0.2844918 #> 99   99     0.2815888 #> 100 100     0.2989472 #> 101 101     0.3027837 #> 102 102     0.2997859 #> 103 103     0.2968468 #> 104 104     0.2939648 #> 105 105     0.3049315 #> 106 106     0.3020274 #> 107 107     0.2991781 #> 108 108     0.2963820 #> 109 109     0.3076240 #> 110 110     0.3048017 #> 111 111     0.3162155 #> 112 112     0.3133667 #> 113 113     0.3105688 #> 114 114     0.3149888 #> 115 115     0.3122258 #> 116 116     0.3167310 #> 117 117     0.3212733 #> 118 118     0.3258535 #> 119 119     0.3230920 #> 120 120     0.3203769 #> 121 121     0.3177071 #> 122 122     0.3150814 #> 123 123     0.3124988 #> 124 124     0.3099582 #> 125 125     0.3148386 #> 126 126     0.3197549 #> 127 127     0.3172171 #> 128 128     0.3147194 #> 129 129     0.3197513 #> 130 130     0.3172726 #> 131 131     0.3148321 #> 132 132     0.3199760 #> 133 133     0.3175519 #> 134 134     0.3151643 #> 135 135     0.3128123 #> 136 136     0.3180998 #> 137 137     0.3234237 #> 138 138     0.3210629 #> 139 139     0.3187364 #> 140 140     0.3164433 #> 141 141     0.3141830 #> 142 142     0.3119548 #> 143 143     0.3097579 #> 144 144     0.3153138 #> 145 145     0.3131241 #> 146 146     0.3109647 #> 147 147     0.3088348 #> 148 148     0.3067338 #> 149 149     0.3124435 #> 150 150     0.3103465 #> 151 151     0.3082775 #> 152 152     0.3140791 #> 153 153     0.3120128 #> 154 154     0.3099735 #> 155 155     0.3079607 #> 156 156     0.3059739 #> 157 157     0.3119177 #> 158 158     0.3099310 #> 159 159     0.3159375 #> 160 160     0.3219827 #> 161 161     0.3199703 #> 162 162     0.3179829 #> 163 163     0.3160200 #> 164 164     0.3140813 #> 165 165     0.3202633 #> 166 166     0.3183224 #> 167 167     0.3245681 #> 168 168     0.3226245 #> 169 169     0.3207042 #> 170 170     0.3188065 #> 171 171     0.3251617 #> 172 172     0.3232601 #> 173 173     0.3296795 #> 174 174     0.3277739 #> 175 175     0.3258901 #> 176 176     0.3240279 #> 177 177     0.3221868 #> 178 178     0.3287348 #> 179 179     0.3268880 #> 180 180     0.3250618 #> 181 181     0.3316947 #> 182 182     0.3298622 #> 183 183     0.3451442 #> 184 184     0.3432581 #> 185 185     0.3500507 #> 186 186     0.3568922 #> 187 187     0.3549734 #> 188 188     0.3530752 #> 189 189     0.3511971 #> 190 190     0.3581495 #> 191 191     0.3562645 #> 192 192     0.3543993 #> 193 193     0.3525535 #> 194 194     0.3507268 #> 195 195     0.3489189 #> 196 196     0.3471296 #> 197 197     0.3542474 #> 198 198     0.3524492 #> 199 199     0.3506692 #> 200 200     0.3489070 hillestimator(rainfall$LANVEOC[rainfall$SEASON=='SPRING'], plot=T)  #>       k Hill.estimate #> 1     1     0.0000000 #> 2     2     0.3062167 #> 3     3     0.3842201 #> 4     4     0.2821974 #> 5     5     0.2145849 #> 6     6     0.2015209 #> 7     7     0.1740131 #> 8     8     0.2185826 #> 9     9     0.3017168 #> 10   10     0.3518917 #> 11   11     0.3246707 #> 12   12     0.2951552 #> 13   13     0.2785911 #> 14   14     0.2571610 #> 15   15     0.2468896 #> 16   16     0.2468241 #> 17   17     0.2396964 #> 18   18     0.2255966 #> 19   19     0.2172388 #> 20   20     0.2099981 #> 21   21     0.2079370 #> 22   22     0.1980353 #> 23   23     0.2235199 #> 24   24     0.2226122 #> 25   25     0.2357090 #> 26   26     0.2399483 #> 27   27     0.2307195 #> 28   28     0.2406934 #> 29   29     0.2320972 #> 30   30     0.2240938 #> 31   31     0.2213079 #> 32   32     0.2188748 #> 33   33     0.2215137 #> 34   34     0.2243706 #> 35   35     0.2177715 #> 36   36     0.2309676 #> 37   37     0.2245518 #> 38   38     0.2382854 #> 39   39     0.2320148 #> 40   40     0.2260657 #> 41   41     0.2204140 #> 42   42     0.2250884 #> 43   43     0.2197292 #> 44   44     0.2350281 #> 45   45     0.2296865 #> 46   46     0.2349452 #> 47   47     0.2298377 #> 48   48     0.2406959 #> 49   49     0.2516817 #> 50   50     0.2573563 #> 51   51     0.2522091 #> 52   52     0.2581929 #> 53   53     0.2754508 #> 54   54     0.2702536 #> 55   55     0.2708827 #> 56   56     0.2716233 #> 57   57     0.2667729 #> 58   58     0.2620927 #> 59   59     0.2632719 #> 60   60     0.2645403 #> 61   61     0.2601313 #> 62   62     0.2558669 #> 63   63     0.2517400 #> 64   64     0.2593049 #> 65   65     0.2610842 #> 66   66     0.2570675 #> 67   67     0.2590377 #> 68   68     0.2551715 #> 69   69     0.2514189 #> 70   70     0.2477752 #> 71   71     0.2501353 #> 72   72     0.2525470 #> 73   73     0.2490394 #> 74   74     0.2456279 #> 75   75     0.2423086 #> 76   76     0.2450480 #> 77   77     0.2478297 #> 78   78     0.2446111 #> 79   79     0.2535964 #> 80   80     0.2626564 #> 81   81     0.2593732 #> 82   82     0.2623631 #> 83   83     0.2653941 #> 84   84     0.2621965 #> 85   85     0.2716539 #> 86   86     0.2684580 #> 87   87     0.2653364 #> 88   88     0.2750256 #> 89   89     0.2719003 #> 90   90     0.2752761 #> 91   91     0.2786900 #> 92   92     0.2756275 #> 93   93     0.2726315 #> 94   94     0.2762147 #> 95   95     0.2732762 #> 96   96     0.2769570 #> 97   97     0.2740721 #> 98   98     0.2844918 #> 99   99     0.2815888 #> 100 100     0.2989472 #> 101 101     0.3027837 #> 102 102     0.2997859 #> 103 103     0.2968468 #> 104 104     0.2939648 #> 105 105     0.3049315 #> 106 106     0.3020274 #> 107 107     0.2991781 #> 108 108     0.2963820 #> 109 109     0.3076240 #> 110 110     0.3048017 #> 111 111     0.3162155 #> 112 112     0.3133667 #> 113 113     0.3105688 #> 114 114     0.3149888 #> 115 115     0.3122258 #> 116 116     0.3167310 #> 117 117     0.3212733 #> 118 118     0.3258535 #> 119 119     0.3230920 #> 120 120     0.3203769 #> 121 121     0.3177071 #> 122 122     0.3150814 #> 123 123     0.3124988 #> 124 124     0.3099582 #> 125 125     0.3148386 #> 126 126     0.3197549 #> 127 127     0.3172171 #> 128 128     0.3147194 #> 129 129     0.3197513 #> 130 130     0.3172726 #> 131 131     0.3148321 #> 132 132     0.3199760 #> 133 133     0.3175519 #> 134 134     0.3151643 #> 135 135     0.3128123 #> 136 136     0.3180998 #> 137 137     0.3234237 #> 138 138     0.3210629 #> 139 139     0.3187364 #> 140 140     0.3164433 #> 141 141     0.3141830 #> 142 142     0.3119548 #> 143 143     0.3097579 #> 144 144     0.3153138 #> 145 145     0.3131241 #> 146 146     0.3109647 #> 147 147     0.3088348 #> 148 148     0.3067338 #> 149 149     0.3124435 #> 150 150     0.3103465 #> 151 151     0.3082775 #> 152 152     0.3140791 #> 153 153     0.3120128 #> 154 154     0.3099735 #> 155 155     0.3079607 #> 156 156     0.3059739 #> 157 157     0.3119177 #> 158 158     0.3099310 #> 159 159     0.3159375 #> 160 160     0.3219827 #> 161 161     0.3199703 #> 162 162     0.3179829 #> 163 163     0.3160200 #> 164 164     0.3140813 #> 165 165     0.3202633 #> 166 166     0.3183224 #> 167 167     0.3245681 #> 168 168     0.3226245 #> 169 169     0.3207042 #> 170 170     0.3188065 #> 171 171     0.3251617 #> 172 172     0.3232601 #> 173 173     0.3296795 #> 174 174     0.3277739 #> 175 175     0.3258901 #> 176 176     0.3240279 #> 177 177     0.3221868 #> 178 178     0.3287348 #> 179 179     0.3268880 #> 180 180     0.3250618 #> 181 181     0.3316947 #> 182 182     0.3298622 #> 183 183     0.3451442 #> 184 184     0.3432581"},{"path":"/reference/rainfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily rainfall data set from a network of weather stations in France — rainfall","title":"Daily rainfall data set from a network of weather stations in France — rainfall","text":"data set precipitation amounts mm nine weather stations.","code":""},{"path":"/reference/rainfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily rainfall data set from a network of weather stations in France — rainfall","text":"","code":"rainfall"},{"path":"/reference/rainfall.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily rainfall data set from a network of weather stations in France — rainfall","text":"data frame 10 columns. y.date Date BREST Precipitation amounts Brest (oceanic weather) LANVEOC Precipitation amounts Lanveoc (oceanic weather) QUIMPER Precipitation amounts Quimper (oceanic weather) BORMES Precipitation amounts Bormes (mediterranean weather) LE.LUC Precipitation amounts Le Luc (mediterranean weather) HYERES Precipitation amounts Hyeres (mediterranean weather) NANCY Precipitation amounts Nancy (continental weather) METZ Precipitation amounts Metz (continental weather) ROVILLE Precipitation amounts Roville (continental weather) SEASON Season","code":""},{"path":"/reference/rainfall.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily rainfall data set from a network of weather stations in France — rainfall","text":"Méteo France.","code":""}]
